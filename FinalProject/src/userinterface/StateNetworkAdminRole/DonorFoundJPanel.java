/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StateNetworkAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Hospital.Patient;
import Business.Network.Network;
import Business.Organization.LegalEnterprise.LegalOrganization;
import Business.RegCenter.Donor;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FindDonorRequest;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ApoorvaLakhmani
 */
public class DonorFoundJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Network stateNetwork;
    private UserAccount account;
    private ArrayList<Donor> donorList;
    private FindDonorRequest findDonorRequest;
    /**
     * Creates new form DonorFoundJPanel
     */
    public DonorFoundJPanel() {
        initComponents();
    }

    DonorFoundJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system,ArrayList<Donor> donorList,FindDonorRequest findDonorRequest,Network stateNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.donorList = donorList;
         this.findDonorRequest = findDonorRequest;
          this.stateNetwork = stateNetwork;
          if(donorList.isEmpty()){
           noDonorLabel.setVisible(true);
          }
          else{
             noDonorLabel.setVisible(false); 
          }
        populateTable();
    }
    
    public void populateTable(){
        DonorDetailTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 20));
        DefaultTableModel model = (DefaultTableModel) DonorDetailTable.getModel();
        model.setRowCount(0);
        
        for(Donor donor : donorList){
           Object[] row = new Object[2];
           row[0] = donor;
           row[1] = donor.getDonorName();
           
           model.addRow(row);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DonorDetailTable = new javax.swing.JTable();
        LegalDeptBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        noDonorLabel = new javax.swing.JLabel();
        forwardToCountryAdminBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DonorDetailTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "DonorID", "Donor Name"
            }
        ));
        jScrollPane1.setViewportView(DonorDetailTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, 188));

        LegalDeptBtn.setText("Forward to legal Department");
        LegalDeptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LegalDeptBtnActionPerformed(evt);
            }
        });
        add(LegalDeptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 310, 253, 58));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 467, -1, -1));

        noDonorLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        noDonorLabel.setForeground(new java.awt.Color(255, 0, 51));
        noDonorLabel.setText("No Donor Found!");
        add(noDonorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));

        forwardToCountryAdminBtn.setText("Request Country Administrator");
        forwardToCountryAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forwardToCountryAdminBtnActionPerformed(evt);
            }
        });
        add(forwardToCountryAdminBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 390, 253, 58));
    }// </editor-fold>//GEN-END:initComponents

    private void LegalDeptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LegalDeptBtnActionPerformed
        int selectedRow= DonorDetailTable.getSelectedRow();
       if (selectedRow>=0)
       {
         Patient patient = findDonorRequest.getPatientDetails();
        findDonorRequest.setSender(account);
        findDonorRequest.setStatus("Awaiting Legal Authorizztion");
        Donor donor=(Donor)DonorDetailTable.getValueAt(selectedRow, 0);
        findDonorRequest.setDonor(donor);
        
                   Organization org = null;
           for (Network city : stateNetwork.getSubNetwork()) {
               if (patient.getPatientLocation().equalsIgnoreCase(city.getNetworkName())) {
                   for (Enterprise enterprise  : city.getEnterpriseDirectory().getEnterpriseList()) {
                       if (enterprise.getEnterpriseType().getValue().equals(Enterprise.EnterpriseType.LegalEnterprise.toString())) {
                           for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                               if (organization instanceof LegalOrganization) {
                                   org = organization;
                                   break;
                               }
                           }
                       }
                   }
               }
           }
        
        
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(findDonorRequest);
        }
       }
       else{
           
           JOptionPane.showMessageDialog(this, "Please select a row", "Error", JOptionPane.ERROR_MESSAGE);
       }

    }//GEN-LAST:event_LegalDeptBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void forwardToCountryAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forwardToCountryAdminBtnActionPerformed
        for (Network network: system.getNetworkList()){
            for(Network state:network.getSubNetwork()){
                if(state.getNetworkName().equals(stateNetwork.getNetworkName())){
                    network.getWorkQueue().getWorkRequestList().add(findDonorRequest);
                    JOptionPane.showMessageDialog(null, "Request forwarded to Country Admin");
                    break;
                }
            }
        }
    }//GEN-LAST:event_forwardToCountryAdminBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DonorDetailTable;
    private javax.swing.JButton LegalDeptBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton forwardToCountryAdminBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel noDonorLabel;
    // End of variables declaration//GEN-END:variables
}
