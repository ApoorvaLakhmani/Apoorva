/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.StateNetworkAdminRole;

//import Business.EcoSystem;
//import Business.Employee.Employee;
//import Business.Enterprise.Enterprise;
//import Business.Network.Network;
//import Business.Role.AdminRole;
//import Business.UserAccount.UserAccount;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.HospitalAdminRole;
import Business.Role.LegalRepresentativeRole;
import Business.Role.OPTEAdminRole;
import Business.Role.RegisterationCenterAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.CountryNetworkAdminRole.CountryNetworkAdminWorkArea;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        populateCityComboBox();
        populateTable();

    }

    private void populateTable() {
        enterpriseJTable.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 20));
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();
        model.setRowCount(0);
        
        for (Network network : system.getNetworkList()) {
            for (Network state: network.getSubNetwork()){
                 if (state.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
                  for (Network cityNetwork : state.getSubNetwork()) {
                    for (Enterprise enterprise : cityNetwork.getEnterpriseDirectory().getEnterpriseList()) {
                        for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                            Object[] row = new Object[3];
                            row[0] = enterprise.getName();
                            row[1] = cityNetwork.getNetworkName();
                            row[2] = userAccount.getUsername();

                            model.addRow(row);
                        }
                    }
                }  
            }
           }
        }

    }

    private void populateEnterpriseComboBox(Network network) {
        enterpriseJComboBox.removeAllItems();
        enterpriseJComboBox.addItem("Please Select");
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseJComboBox.addItem(enterprise);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cityNameComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        backJButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        countryNameTextBox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        stateNameTextBox = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        enterpriseJTable.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Enterprise Name", "City", "Username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 690, 160));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("City:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 351, -1, -1));

        cityNameComboBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        cityNameComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cityNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cityNameComboBoxItemStateChanged(evt);
            }
        });
        add(cityNameComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 359, 136, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel2.setText("Username");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 468, -1, -1));

        usernameJTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add(usernameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 463, 136, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setText("Enterprise");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 417, -1, -1));

        enterpriseJComboBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(enterpriseJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 414, 136, -1));

        submitJButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 630, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel4.setText("Password");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 510, -1, -1));

        nameJTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 563, 136, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel5.setText("Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 563, -1, -1));

        passwordJPasswordField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add(passwordJPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 508, 136, -1));

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 638, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel6.setText("Country :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 262, -1, -1));

        countryNameTextBox.setEditable(false);
        countryNameTextBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add(countryNameTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 260, 136, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel7.setText("State:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 311, -1, 17));

        stateNameTextBox.setEditable(false);
        stateNameTextBox.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        add(stateNameTextBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, 136, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();

        String username = usernameJTextField.getText();
        String password = String.valueOf(passwordJPasswordField.getPassword());
        String name = nameJTextField.getText();

        Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.Hospital)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new HospitalAdminRole());
        } else if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.DonorRegCenter)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new RegisterationCenterAdminRole());
        } else if (enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.OrganProcAndTransCenter)) {
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new OPTEAdminRole());
        }else if(enterprise.getEnterpriseType().equals(Enterprise.EnterpriseType.LegalEnterprise)){
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new LegalRepresentativeRole());
        }

        populateTable();

    }//GEN-LAST:event_submitJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        StateAdminWorkArea sysAdminwjp = (StateAdminWorkArea) component;
        sysAdminwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void cityNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cityNameComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED && !cityNameComboBox.getSelectedItem().equals("Please select")) {
            Network city = (Network) cityNameComboBox.getSelectedItem();
            populateEnterpriseComboBox(city);
        }
    }//GEN-LAST:event_cityNameComboBoxItemStateChanged

  
//    private void populateStateComboBox() {
//
//        ArrayList<Network> networkList = system.getNetworkList();
//        Network network;
//        cityNameComboBox.removeAllItems();
//        stateComboBox.removeAllItems();
//        stateComboBox.addItem("Please select");
//        for (int i = 0; i < networkList.size(); i++) {
//            network = networkList.get(i);
//            if (network.getUserAccountDirectory().getUserAccountList().size() > 0) {
//                if (network.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
//                    for (Network state : network.getSubNetwork()) {
//                        stateComboBox.addItem(state);
//                    }
//                }
//            }
//        }
//    }
     private void populateCityComboBox() {
        ArrayList<Network> networkList = system.getNetworkList();
        cityNameComboBox.removeAllItems();
        cityNameComboBox.addItem("Please select");
        for (Network country : networkList) {
            if (country.getUserAccountDirectory().getUserAccountList().size() > 0) {
                for (Network state : country.getSubNetwork()) {
                    if (state.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())) {
                        countryNameTextBox.setText(country.getNetworkName());
                        stateNameTextBox.setText(state.getNetworkName());
                        for (Network city : state.getSubNetwork()) {
                            cityNameComboBox.addItem(city);
                        }
                    }
                }
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox cityNameComboBox;
    private javax.swing.JTextField countryNameTextBox;
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JTextField stateNameTextBox;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
