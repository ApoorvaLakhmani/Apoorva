/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CountryNetworkAdminRole;

import Business.Hospital.Patient;
import Business.Network.Network;
import Business.RegCenter.Donor;
import Business.RegCenter.Organ;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author ApoorvaLakhmani
 */
public class CountryReportsJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Network countryNetwork;
    private ArrayList<Donor> donorList;
    private ArrayList<Patient> patientList;
    /**
     * Creates new form CountryReportsJPanel
     */
    public CountryReportsJPanel(JPanel userProcessContainer,Network countryNetwork) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.countryNetwork = countryNetwork;
        this.donorList = new ArrayList<Donor>();
        this.patientList = new ArrayList<Patient>();
        populatePatientsAndDonors();
        
        final PieDataset datasetDonors = createDataSetForDonorReports();
        final JFreeChart donorChart = createDonorsReportsChart(datasetDonors);
        final ChartPanel donorChartPanel = new ChartPanel(donorChart);
        donorReportsJPanel.setLayout(new BorderLayout());
        donorReportsJPanel.add(donorChartPanel, BorderLayout.CENTER);
        donorReportsJPanel.validate();
    }

    public void populatePatientsAndDonors(){
        for(Network stateNetwork : countryNetwork.getSubNetwork()){
            donorList.addAll(stateNetwork.getDonorDirectory().getDonorList());
            patientList.addAll(stateNetwork.getNetworkPatientDirectory().getPatientDirectory());
        }
    }
    public PieDataset createDataSetForDonorReports(){
          DefaultPieDataset dataset= new DefaultPieDataset();
          HashMap<String,Integer> organDonorMap = new HashMap<>();
          for(Donor donor : donorList){
              for(Organ organ : donor.getOrganDonateList()){
                  if(organDonorMap.containsKey(organ.getOrganName())){
                      Integer count = organDonorMap.get(organ);
                      count++;
                      organDonorMap.put(organ.getOrganName(), count); 
                  }else{
                      organDonorMap.put(organ.getOrganName(), 1);
                  }
              }
          }
          
          for(Map.Entry<String,Integer> entry : organDonorMap.entrySet()){
            Integer noOfDonors = entry.getValue();
            noOfDonors = (noOfDonors/donorList.size())*100;
            organDonorMap.put(entry.getKey(), noOfDonors);
          }
          for(Map.Entry<String,Integer> entry : organDonorMap.entrySet()){
              dataset.setValue(entry.getKey(), entry.getValue());
          }
          return dataset;
    }
    
    public JFreeChart createDonorsReportsChart(PieDataset dataSet){
        return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patientReportJPanel = new javax.swing.JPanel();
        donorReportsJPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout patientReportJPanelLayout = new javax.swing.GroupLayout(patientReportJPanel);
        patientReportJPanel.setLayout(patientReportJPanelLayout);
        patientReportJPanelLayout.setHorizontalGroup(
            patientReportJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );
        patientReportJPanelLayout.setVerticalGroup(
            patientReportJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout donorReportsJPanelLayout = new javax.swing.GroupLayout(donorReportsJPanel);
        donorReportsJPanel.setLayout(donorReportsJPanelLayout);
        donorReportsJPanelLayout.setHorizontalGroup(
            donorReportsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
        );
        donorReportsJPanelLayout.setVerticalGroup(
            donorReportsJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton1.setText("<< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(patientReportJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(donorReportsJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(donorReportsJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(patientReportJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(67, 67, 67))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel donorReportsJPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel patientReportJPanel;
    // End of variables declaration//GEN-END:variables
}
