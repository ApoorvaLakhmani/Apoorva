/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NetworkAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import UserInterface.SystemAdminWorkArea.ManageEnterpriseAdminJPanel;
import UserInterface.SystemAdminWorkArea.ManageEnterpriseJPanel;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Neha
 */
public class NetworkAdminWorkArea extends javax.swing.JPanel {
      private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    /**
     * Creates new form NetworkAdminWorkArea
     */
      
    public NetworkAdminWorkArea(JPanel userProcessContainer, UserAccount account , EcoSystem system) {
        initComponents();
            this.userProcessContainer = userProcessContainer;
         this.system = system;
         this.account = account;
         populateTree();
    }
    
    public void populateTree(){
        DefaultTreeModel treeModel = (DefaultTreeModel) NetworkJTree.getModel();
        ArrayList<Network> networkList = system.getNetworkList();
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;
        
        Network network;
        Enterprise enterprise;
        Organization organization;
        Network stateNetwork;
        Network cityNetwork;
        
        DefaultMutableTreeNode rootNetwork = new DefaultMutableTreeNode("Network");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode)treeModel.getRoot();
        root.removeAllChildren();
        root.insert(rootNetwork,0);
        
        DefaultMutableTreeNode networkNode;
        DefaultMutableTreeNode stateNetworkNode;
        DefaultMutableTreeNode cityNetworkNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        
        for(int i = 0; i<networkList.size(); i++){
            network = networkList.get(i);
            if(network.getUserAccountDirectory().getUserAccountList().size() > 0){
                if(network.getUserAccountDirectory().getUserAccountList().get(0).getUsername().equals(account.getUsername())){
                 networkNode = new DefaultMutableTreeNode(network.getNetworkName());
                 rootNetwork.insert(networkNode, i);
            
            for(int j = 0 ; j<network.getSubNetwork().size(); j++){
                stateNetwork = network.getSubNetwork().get(j);
                stateNetworkNode = new DefaultMutableTreeNode(stateNetwork.getNetworkName());
                networkNode.insert(stateNetworkNode, j);
                
                
                for(int k = 0; k<stateNetwork.getSubNetwork().size(); k++){
                   cityNetwork = stateNetwork.getSubNetwork().get(k);
                   cityNetworkNode = new DefaultMutableTreeNode(cityNetwork.getNetworkName());
                   stateNetworkNode.insert(cityNetworkNode, k);
                   
                   enterpriseList = cityNetwork.getEnterpriseDirectory().getEnterpriseList();
                   for(int a = 0; a<enterpriseList.size(); a++){
                      enterprise = enterpriseList.get(a);
                      enterpriseNode = new DefaultMutableTreeNode(enterprise.getName());
                      cityNetworkNode.insert(enterpriseNode, a);
                
                      organizationList = enterprise.getOrganizationDirectory().getOrganizationList();
                
                      for(int b = 0; b< organizationList.size(); b++){
                          organization = organizationList.get(b);
                          organizationNode = new DefaultMutableTreeNode(organization.getName());
                          enterpriseNode.insert(organizationNode, b);
                      }
                    } 
                }
            } 
            }
            }
            
                   
        }
        treeModel.reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        MngEnterpriseBtn = new javax.swing.JButton();
        MngEnterpriseAdminBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        NetworkJTree = new javax.swing.JTree();

        jScrollPane1.setViewportView(jTree1);

        MngEnterpriseBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        MngEnterpriseBtn.setText("Manage Enterprise");
        MngEnterpriseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MngEnterpriseBtnActionPerformed(evt);
            }
        });

        MngEnterpriseAdminBtn.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        MngEnterpriseAdminBtn.setText("Manage Enterprise Admin");
        MngEnterpriseAdminBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MngEnterpriseAdminBtnActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        NetworkJTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane2.setViewportView(NetworkJTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MngEnterpriseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MngEnterpriseAdminBtn))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(MngEnterpriseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(MngEnterpriseAdminBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MngEnterpriseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MngEnterpriseBtnActionPerformed
        ManageEnterpriseJPanel manageEnterprise = new ManageEnterpriseJPanel(userProcessContainer, system);
        userProcessContainer.add("ManageEnterpriseJPanel",manageEnterprise);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_MngEnterpriseBtnActionPerformed

    private void MngEnterpriseAdminBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MngEnterpriseAdminBtnActionPerformed
        ManageEnterpriseAdminJPanel manageEnterpriseAdmin = new ManageEnterpriseAdminJPanel(userProcessContainer, system);
        userProcessContainer.add("ManageEnterpriseAdminJPanel",manageEnterpriseAdmin);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_MngEnterpriseAdminBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MngEnterpriseAdminBtn;
    private javax.swing.JButton MngEnterpriseBtn;
    private javax.swing.JTree NetworkJTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
